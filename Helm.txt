HELM

package manager for yaml file(kubernetes) and distributing them into public/private repo.
database app, monitoring apps(ELK stack), 
helm can have a common blue print of yml file (template file: which can take values from external configuration[.Values.conatiner.name])
easy to deploy over different environments[dev, uat, prod: uses same configurations]

release management
(heml2)helm client[helm cli] ----- server [tiller a pod which helps in work] in helm3 tiller got removed

install help from helm.sh

Charts : Helm uses a packaging format called charts. A chart is a collection of files that describe a related set of Kubernetes resources. A single chart might be used to deploy something simple, like a memcached pod, or something complex, like a full web app stack with HTTP servers, databases, caches, and so on.

>>helm repo add bitnami https://charts.bitnami.com/bitnami
>>helm install <name> bitnami/mysql (here name can be sql)
>>helm uninstall mysql (to remove this completely)

>>helm show values <name/chartname>
>>helm show values <name/chartname> | grep -i password
**we can provide custom values during installation(--set)** or **helm upgrade <name/chartname> (--set)**
to access the value parent.child=<value> eg: --set grafana.adminPassword=admin
>>kubectl edit svc monitoring-grafana(type: NodePort, nodePort: 30001) to get it access from external
>>helm upgrade monitoring prom-repo/kube-prometheus-stack --set grafana.adimPassword=admin --set grafana.service.type=NodePort (or update helm chart yaml file directly and refer --values=<file>.yaml)
